# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

# 3 Steps
# Step-1: Download Secure File
# Step-02: Terraform Initialize (State Storage to store in Azure Storage Account)
# Step-03: Terraform Apply

# Step-01: Download Secure File which is SSH Key
- task: DownloadSecureFile@1
  name: sshkey
  inputs:
    secureFile: 'aks-terraform-devops-ssh-key-ububtu.pub'

# Step-02: Terraform Initialize (State Storage to store in Azure Storage Account)
- task: TerraformCLI@0
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: 'StackSimplify-Paid-Subscription(2)(82808767-144c-4c66-a320-b30791668b0a)'
    backendAzureRmResourceGroupName: 'terraform-state-storage-rg2'
    backendAzureRmStorageAccountName: 'tfstatekalyan123'
    backendAzureRmContainerName: 'prodtfstate'
    backendAzureRmKey: 'aks-devops-prod3.tfstate'
    allowTelemetryCollection: false

# Step-03: Terraform Apply
- task: TerraformCLI@0
  inputs:
    command: 'apply'
    environmentServiceName: 'StackSimplify-Paid-Subscription(2)(82808767-144c-4c66-a320-b30791668b0a)'
    commandOptions: '-var ssh_public_key=$(sshkey.secureFilePath)'
    allowTelemetryCollection: false